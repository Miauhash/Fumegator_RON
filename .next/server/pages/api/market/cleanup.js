"use strict";(()=>{var e={};e.id=8642,e.ids=[8642],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6133:(e,a,t)=>{t.r(a),t.d(a,{config:()=>p,default:()=>d,routeModule:()=>u});var r={};t.r(r),t.d(r,{default:()=>handler});var s=t(1802),n=t(7153),i=t(6249),o=t(7864);let l=process.env.CRON_SECRET||process.env.ADMIN_SECRET_KEY;async function handler(e,a){if("POST"!==e.method)return a.status(405).json({message:"M\xe9todo n\xe3o permitido."});let{authorization:t}=e.headers;if(t!==`Bearer ${l}`)return a.status(401).json({message:"N\xe3o autorizado."});try{let e=new Date,t=await o.Z.marketListing.findMany({where:{isActive:!0,endsAt:{lt:e}}});if(0===t.length)return a.status(200).json({message:"Nenhum an\xfancio expirado para limpar."});for(let e of t)await o.Z.$transaction(async a=>{let t=await a.gameState.findUnique({where:{wallet:e.sellerWallet}});if(t){let r=t.state;r.balances[e.tokenType]=(r.balances[e.tokenType]||0)+e.amount,await a.gameState.update({where:{wallet:e.sellerWallet},data:{state:r}})}await a.marketListing.update({where:{id:e.id},data:{isActive:!1}})});a.status(200).json({message:`Limpeza conclu\xedda. ${t.length} an\xfancios expirados foram processados.`})}catch(e){console.error("Erro na limpeza de an\xfancios do mercado:",e),a.status(500).json({message:"Erro interno no servidor durante a limpeza."})}}let d=(0,i.l)(r,"default"),p=(0,i.l)(r,"config"),u=new s.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/market/cleanup",pathname:"/api/market/cleanup",bundlePath:"",filename:""},userland:r})},7864:(e,a,t)=>{let r;t.d(a,{Z:()=>n});var s=t(3524);console.log("INICIALIZANDO PRISMA CLIENT. CONECTANDO AO BANCO DE DADOS:",process.env.DATABASE_URL),global.prisma||(global.prisma=new s.PrismaClient),r=global.prisma;let n=r}};var a=require("../../../webpack-api-runtime.js");a.C(e);var __webpack_exec__=e=>a(a.s=e),t=a.X(0,[4222],()=>__webpack_exec__(6133));module.exports=t})();